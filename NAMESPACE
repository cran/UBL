
## ------------------------------------------------------------------------------------------------

useDynLib(UBL, .registration=TRUE)

## ------------------------------------------------------------------------------------------------

import(methods)
importFrom("grDevices", "boxplot.stats")
importFrom("stats", "rnorm", "runif", "sd", "approxfun", "density", "isoreg", "loess",
           "loess.control", "predict")
importFrom("graphics", "contour", "image", "points")
importFrom("MBA", "mba.points", "mba.surf")
importFrom("randomForest", "randomForest")
importFrom("automap", "autoKrige")
importFrom("sp", "coordinates<-", "SpatialPoints")
importFrom("gstat", "idw")


## ------------------------------------------------------------------------------------------------

## Functions

export(
	##classification pre-processing methods
	AdasynClassif,
	CNNClassif,
	ENNClassif,
	GaussNoiseClassif,
	ImpSampClassif,
	NCLClassif,
	OSSClassif,
	RandOverClassif,
	RandUnderClassif,
	SmoteClassif,
	TomekClassif,
	## regression pre-processing methods
	GaussNoiseRegress,
	ImpSampRegress,
	RandOverRegress,
	RandUnderRegress,
	SmoteRegress,	
	## phi related function
	phi.control,
#	phi.setup,
#	phi.extremes,
#	phi.range,
	phi,
	#tPhi,
	#BL,
	#UtilNewRegress,
	##surface interpolation methods
	UtilInterpol,
	## utility-based evaluation metrics for classification and regression
	EvalClassifMetrics,
	EvalRegressMetrics,
	## utility-based optimal predictions
	UtilOptimClassif,
	UtilOptimRegress,
	## utility-based learning
	#MetacostClassif,
	#MetacostRegress,
	## neighbours function
	neighbours,
	distances
)
       
